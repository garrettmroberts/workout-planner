{"version":3,"sources":["utils/GlobalState.js","utils/API.js","components/Nav/index.js","components/LoginForm/index.js","components/SignUpForm/index.js","components/Card/index.js","components/CurrentUser/index.js","components/Greeting/index.js","pages/Home.js","components/GoalsForm/index.js","components/WorkoutCalendar/index.js","pages/Calendar.js","components/WorkoutForm/index.js","pages/CreateWorkout.js","components/DropDown/index.js","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","Provider","reducer","state","action","type","isLoggedIn","currentUser","user","test","console","log","userToSet","password","workoutsToRender","payload","showLogIn","showSignUp","clickedWorkouts","StoreProvider","props","useReducer","dispatch","value","useStoreContext","useContext","axios","get","query","equipment","muscle","category","userData","post","id","put","workoutData","Nav","store","logOut","API","then","res","catch","err","signUp","e","preventDefault","logIn","className","to","onClick","LoginForm","userRef","useRef","pwRef","onSubmit","email","current","data","ref","placeholder","required","SignUpForm","emailRef","firstRef","lastRef","pwRef1","pwRef2","checkPassword","checkEmail","pw1","pw2","validateInputs","newUser","firstName","lastName","class","Card","day","workouts","workoutSection","jsDate","map","workout","key","Math","floor","random","name","sets","time","CurrentUser","useEffect","calendar","index","jsDateCleaned","DateTime","fromISO","toISODate","jsMilliseconds","toMillis","todayCleaned","local","_id","splice","itemArray","itemName","goals","length","i","listItems","goal","setCalendar","Greeting","Home","GoalsForm","useState","formState","setFormState","updateState","event","target","dataset","innerText","document","querySelectorAll","forEach","button","classList","remove","add","toggle","contains","idx","indexOf","newArr","buildCalendar","filtered","item","join","toLowerCase","push","exercisesSortedByDate","collectExerciseDays","userCalendar","buildCalendarDays","finishedCalendar","addReps","updatedUser","exercises","muscleGroups","exercise","muscleGroup","uniqueMuscleGroups","filter","self","chestAndTricepsMuscles","legMuscles","backAndBicepMuscles","cardio","chestExercises","legExercises","backExerises","cardioExercises","includes","chestAndBiceps","legs","backAndTriceps","Date","prototype","nextDay","days","date","this","valueOf","setDate","getDate","workoutCalendar","exercisesArray","today","workoutType","readableDate","getMonth","possibleExercises","dayExercises","j","rand","dayPlan","next","reps","data-type","WorkoutCalendar","workoutCards","Calendar","WorkoutForm","catRef","equipmentRef","nameRef","groupRef","makeArray","input","split","workoutToAdd","newWorkout","prepareSubmission","CreateWorkout","DropDown","display","keys","func","data-toggle","charAt","toUpperCase","slice","data-name","data-key","Search","timeoutID","searchRef","getAllWorkouts","handleChange","clearTimeout","debouncedSearch","interval","setTimeout","clickedWorkout","wo","clearClickedWorkouts","makeCustomWorkout","onChange","workoutStyles","justifyContent","style","renderWorkouts","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uiBAEMA,EAAeC,0BACbC,EAAaF,EAAbE,SAGFC,EAAU,SAACC,EAAOC,GAEtB,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,eACFF,EADL,CAEEG,YAAY,EACZC,YAAaH,EAAOI,KACpBC,KAAML,EAAOK,OAEjB,IAAK,aAEH,OADAC,QAAQC,IAAI,gCAAiCR,GACtCA,EACT,IAAK,UAGH,IAAIS,EAAYR,EAAOI,KAEvB,cADOI,EAAUC,SACV,eACFV,EADL,CAEEI,YAAaK,EACbH,KAAML,EAAOK,KACbH,YAAY,IAEhB,IAAK,cACH,OAAO,eACFH,EADL,CAEEW,iBAAkBV,EAAOW,UAE7B,IAAK,SACH,sBACKZ,EADL,CAEEG,YAAY,EACZC,YAAa,OAEjB,IAAK,aACH,OAAO,eACFJ,EADL,CAEEa,WAAW,EACXC,YAAY,IAEhB,IAAK,YACH,sBACKd,EADL,CAEEc,YAAY,EACZD,WAAW,IAEf,IAAK,aACD,OAAO,eACFb,EADL,CAEEI,YAAaH,EAAOW,UAE1B,IAAK,oBACH,OAAO,eACFZ,EADL,CAEEe,gBAAiBd,EAAOW,UAE5B,IAAK,uBACH,OAAO,eACFZ,EADL,CAEEe,gBAAiB,OAErB,QAEE,OADAR,QAAQC,IAAI,qBAAsBR,GAC3BA,IAIPgB,EAAgB,SAAC,GAAgB,IAAZC,EAAW,sBACVC,qBAAWnB,EAAU,CAC7CK,YAAa,OAFqB,mBAC7BJ,EAD6B,KACtBmB,EADsB,KAIpC,OAAO,kBAACrB,EAAD,eAAUsB,MAAO,CAACpB,EAAOmB,IAAeF,KAG3CI,EAAkB,kBAAMC,qBAAW1B,I,iBC/E1B,EAEA,WACX,OAAO2B,IAAMC,IAAI,kBAHN,EAKA,SAASC,GACpB,OAAOF,IAAMC,IAAI,uBAAwBC,IAN9B,EASI,SAASC,GACxB,OAAOH,IAAMC,IAAI,2BAA4BE,IAVlC,EAaC,SAASC,GACrB,OAAOJ,IAAMC,IAAI,6BAA+BG,IAdrC,EAiBG,SAASC,GACvB,OAAOL,IAAMC,IAAI,0BAA4BI,IAlBlC,EAqBJ,SAASC,GAChB,OAAON,IAAMO,KAAK,aAAcD,IAtBrB,EAyBD,SAASA,EAAUE,GAC7B,OAAOR,IAAMS,IAAN,qBAAwBD,GAAMF,IA1B1B,EAiCD,SAASI,GACnB,OAAOV,IAAMO,KAAK,gBAAiBG,IAlCxB,EAqCN,SAAS5B,GACd,OAAOkB,IAAMO,KAAK,mBAAoBzB,IAtC3B,EAyCL,WACN,OAAOkB,IAAMO,KAAK,sBA1CP,EA6CI,WACf,OAAOP,IAAMO,KAAK,+B,OCaPI,MAvDf,WAAe,MAGab,IAHb,mBAGNc,EAHM,KAGChB,EAHD,KAIPiB,EAAS,WACbC,IAAaC,MAAK,SAAAC,GAChBhC,QAAQC,IAAI,iBAAkB+B,GAC9BpB,EAAS,CAACjB,KAAM,cAEfsC,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,OAGxBC,EAAU,SAACC,GACfA,EAAEC,iBACFzB,EAAS,CAAEjB,KAAM,gBAEb2C,EAAQ,SAACF,GACbA,EAAEC,iBACFzB,EAAS,CAACjB,KAAM,eA6BlB,OACE,6BA1BIiC,EAAMhC,WAEN,yBAAK2C,UAAU,wCACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,mBAGA,kBAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,aAA9B,YACA,kBAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,WAA9B,UACA,kBAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,WAA9B,UACA,4BAAQD,UAAU,2BAA2BE,QAASZ,GAAtD,WAKF,yBAAKU,UAAU,wCACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,qBACA,0BAAMD,UAAU,eACd,4BAAQA,UAAU,iCAAiCE,QAASN,GAA5D,WACA,4BAAQI,UAAU,kCAAkCE,QAASH,GAA7D,cC1CG,SAASI,IAAa,IAAD,EAEb5B,IAAZF,EAFyB,oBAI5B+B,EAAUC,mBACVC,EAAQD,mBAuBd,OACE,0BAAML,UAAU,uBAAuBO,SAtBpB,SAACV,GACpBA,EAAEC,iBACF,IAAMvC,EAAM,CACViD,MAAOJ,EAAQK,QAAQnC,MACvBV,SAAU0C,EAAMG,QAAQnC,OAE1BiB,EAAUhC,GAAMiC,MAAK,SAAAC,GAEnBhC,QAAQC,IAAI,sCAAuC+B,EAAIiB,MAEvDrC,EAAS,CACPjB,KAAM,UACNG,KAAMkC,EAAIiB,KACVlD,KAAM,wBAGTkC,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAE1BS,EAAQK,QAAQnC,MAAQ,GACxBgC,EAAMG,QAAQnC,MAAQ,KAIpB,yBAAK0B,UAAU,OACb,yBAAKA,UAAU,OACf,2BAAOA,UAAU,oBAAoBW,IAAKP,EAASQ,YAAY,WAE/D,yBAAKZ,UAAY,OACjB,2BAAOA,UAAU,oBAAoBa,UAAQ,EAACF,IAAKL,EAAOM,YAAY,eAGtE,4BAAQZ,UAAU,4BAA4B5C,KAAK,UAAnD,Y,OCgFO0D,MApHf,WAAsB,IAAD,EAECvC,IAAZF,EAFW,oBAIb0C,EAAWV,mBACXW,EAAWX,mBACXY,EAAUZ,mBACVa,EAASb,mBACTc,EAASd,mBA+CTe,EAAgB,SAAAxD,GAEpB,MADgB,kBACDJ,KAAKI,IAIhByD,EAAa,SAAAb,GAEjB,MADmB,mCACDhD,KAAKgD,IAsBzB,OACE,0BAAMD,SA3Ea,SAAAV,GACnBA,EAAEC,iBAEF,IAAMwB,EAAMJ,EAAOT,QAAQnC,MACrBiD,EAAMJ,EAAOV,QAAQnC,MACrBkC,EAAQO,EAASN,QAAQnC,MAE/B,GAkDF,SAAwBkC,EAAOc,EAAKC,GAElC,GAAID,IAAQC,GAAOF,EAAWb,IAAUY,EAAcE,IAAQF,EAAcG,GAE1E,OADA9D,QAAQC,IAAI,iBACL,EACF,GAAI4D,IAAQC,EAEjB,OADA9D,QAAQC,IAAI,gCACL,EACF,IAAK0D,EAAcE,KAASF,EAAcG,GAE/C,OADA9D,QAAQC,IAAI,yDACL,EACF,IAAK2D,EAAWb,GAErB,OADA/C,QAAQC,IAAI,oCACL,EA/DN8D,CAAehB,EAAOc,EAAKC,GAAK,CACjC,IAAIE,EAAU,CACZjB,QACA5C,SAAU0D,EACVI,UAAWV,EAASP,QAAQnC,MAC5BqD,SAAUV,EAAQR,QAAQnC,OAI5BiB,EAAYkC,GACXjC,MAAK,SAAAC,GACJhC,QAAQC,IAAI,YAAa+B,EAAIiB,MAC7B,IAAMnD,EAAOkC,EAAIiB,KACdjB,EAAIiB,MACLrC,EAAS,CAAEjB,KAAM,UAAUG,KAAMA,OAGpCmC,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAM5BoB,EAASN,QAAQnC,MAAQ,GACzB0C,EAASP,QAAQnC,MAAQ,GACzB2C,EAAQR,QAAQnC,MAAQ,GACxB4C,EAAOT,QAAQnC,MAAQ,GACvB6C,EAAOV,QAAQnC,MAAQ,IAyCOW,GAAG,cAAce,UAAU,eACvD,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,YACb,6CACA,2BAAOA,UAAU,eAAeW,IAAKK,EAAUJ,YAAY,gBAE7D,yBAAKZ,UAAU,YACb,4CACA,2BAAOA,UAAU,eAAeW,IAAKM,EAASL,YAAY,gBAG9D,yBAAKZ,UAAU,wBACb,wCACA,2BAAOA,UAAU,eAAea,UAAQ,EAACF,IAAKI,EAAUH,YAAY,UACpE,2BAAOgB,MAAM,aAAb,iEAEF,yBAAK5B,UAAU,2BACb,yBAAKA,UAAU,YACb,2CACA,2BAAOA,UAAU,eAAea,UAAQ,EAACF,IAAKO,EAAQN,YAAY,WAAWxD,KAAK,cAEpF,yBAAK4C,UAAU,YACb,oDACA,2BAAOA,UAAU,eAAea,UAAQ,EAACF,IAAKQ,EAAQP,YAAY,oBAAoBxD,KAAK,eAG/F,4BAAQ4C,UAAU,kBAAkB5C,KAAK,UAAzC,iB,sBC1FSyE,MAzBf,YAA0C,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,SACbC,GADiC,EAAVC,OACNF,EAASG,KAAI,SAAAC,GAClC,MAAyB,aAArBA,EAAQrD,SACH,wBAAIkB,UAAU,kBAAkBoC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC1D,gCAASJ,EAAQK,MADZ,MAC8BL,EAAQM,MAGtC,wBAAIzC,UAAU,kBAAkBoC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC1D,gCAASJ,EAAQK,MADZ,MAC8BL,EAAQO,UAKjD,OACE,yBAAK1C,UAAU,uCACb,yBAAKA,UAAU,eAAe8B,GAC9B,yBAAK9B,UAAU,uBACb,wBAAIA,UAAU,+BACXgC,MCgHIW,MA9Hf,WAAwB,IAAD,EAEKpE,IAFL,mBAEdrB,EAFc,KAEPmB,EAFO,KAGfd,EAAOL,EAAMI,YA+GnB,OA7GAsF,qBAAU,WAERrD,IAAsBC,MAAK,SAAAC,GACzB,IAAMlC,EAAOkC,EAAIiB,KACdjB,EAAIiB,MAAQrC,EAAS,CAAEjB,KAAM,UAAWG,KAAMA,OAChDmC,OAAM,SAAAC,GAAG,OAAGlC,QAAQC,IAAIiC,MAExBpC,EAAKsF,UACNtF,EAAKsF,SAASX,KAAI,SAACJ,EAAKgB,GACtB,IAAMb,EAASH,EAAIG,OACbc,EAAgBC,WAASC,QAAQhB,GAAQiB,YACzCC,EAAiBH,WAASC,QAAQF,GAAeK,WACjDC,EAAeL,WAASM,QAAQJ,YAEtC,GAAIC,EADsBH,WAASC,QAAQI,GAAcD,WACjB,CACtC,IAAMnE,EAAK1B,EAAKgG,IAChBhG,EAAKsF,SAASW,OAAOV,EAAO,GAC5BzE,EAAS,CAACjB,KAAM,aAAcU,QAASP,IACvCgC,EAAehC,EAAM0B,SAI1B,IAwFD,6BACE,yBAAKe,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,YAAoCzC,EAAKmE,WACzC,wBAAI1B,UAAU,yBAAd,sCAjCJ,yBAAKA,UAAW,oBACd,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,eAAf,gBACE,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,+BA/Db,SAACyD,EAAWC,GAEzB,GAAGD,IAAclG,EAAKoG,MACpB,OAAIF,EAAUG,OAAS,EAEnB,6BACCH,EAAUvB,KAAI,SAACrC,EAAEgE,GAAH,OACb,wBAAI7D,UAAU,kBAAkBoC,IAAKyB,GAClChE,OAOL,iCAAO6D,EAAP,UAiDSI,CAAUvG,EAAKqB,UAAW,iBAKrC,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,eAAf,WACE,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,+BACXzC,EAAKwG,KAAOxG,EAAKwG,KAAO,mDApDvB,WAClB,GAAG7G,EAAMI,YAAYuF,UAAY3F,EAAMI,YAAYuF,SAASe,OAAS,EAAE,CACrE,IAAM5B,EAAiBzE,EAAKsF,SAAS,GAAGd,SAASG,KAAI,SAAAC,GACnD,MAAyB,aAArBA,EAAQrD,SACH,wBAAIkB,UAAU,kBAAkBoC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC1D,gCAASJ,EAAQK,MADZ,MAC8BL,EAAQM,MAGtC,wBAAIzC,UAAU,kBAAkBoC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC1D,gCAASJ,EAAQK,MADZ,MAC8BL,EAAQO,SAIjD,OACE,yBAAK1C,UAAU,kCACb,yBAAKA,UAAU,eAAf,0BAAqD,IAArD,IAA2DzC,EAAKsF,SAAS,GAAGf,KAC5E,yBAAK9B,UAAU,uBACb,wBAAIA,UAAU,+BACXgC,KAMT,OACE,yBAAKhC,UAAU,kCACb,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,yBA+BhBgE,M,OCrGMC,MAZf,WACE,OACE,yBAAKjE,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,8BACA,uBAAGA,UAAU,QAAb,iEACA,uBAAGA,UAAU,QAAb,oCCkCOkE,MAlCf,WAAiB,IAAD,EACY3F,IADZ,mBACPrB,EADO,KACAmB,EADA,KA4Bd,OAxBAuE,qBAAU,WACRrD,IAAsBC,MAAK,SAAAC,GACzB,IAAMlC,EAAOkC,EAAIiB,KACdjB,EAAIiB,MAAQrC,EAAS,CAAEjB,KAAM,UAAWG,KAAMA,OAChDmC,OAAM,SAAAC,GAAG,OAAGlC,QAAQC,IAAIiC,QAC3B,IAoBA,yBAAKK,UAAU,WAjBJ9C,EAAMI,YAGb,kBAAC,EAAD,MAIA,yBAAK0C,UAAU,WACb,kBAAC,EAAD,MACC9C,EAAMc,WAAa,kBAAC,EAAD,MAAiB,4BACpCd,EAAMa,UAAY,kBAACoC,EAAD,MAAgB,+B,wBC6T9BgE,MAvVf,WAAsB,IAAD,EACeC,mBAAS,CACzCL,KAAM,GACNnF,UAAW,KAHM,mBACZyF,EADY,KACDC,EADC,OAMO/F,IANP,mBAMZrB,EANY,KAMLmB,EANK,KAQnB,SAASkG,EAAYC,GAEnBA,EAAM1E,iBAGN,IAAM1C,EAAOoH,EAAMC,OAAOC,QAAQtH,KAC5BkB,EAAQkG,EAAMC,OAAOE,UAG3B,GAAa,SAATvH,EAEFkH,EAAa,eAAKD,EAAN,eAAkBjH,EAAOkB,KAGrBsG,SAASC,iBAAiB,aAClCC,SAAQ,SAAAC,GACdA,EAAOC,UAAUC,OAAO,aAI1BT,EAAMC,OAAOO,UAAUE,IAAI,eAQ3B,GAHAV,EAAMC,OAAOO,UAAUG,OAAO,UAG1BX,EAAMC,OAAOO,UAAUI,SAAS,UAClCd,EAAa,eAAKD,EAAN,eAAkBjH,EAAlB,sBAA6BiH,EAAUzF,WAAvC,CAAkDN,WACzD,CAEL,IAAM+G,EAAMhB,EAAUzF,UAAU0G,QAAQhH,GAGpCiH,EAASlB,EAAUzF,UACvByF,EAAUzF,UAAU4E,OAAO6B,EAAK,GAChCf,EAAa,eAAKD,EAAN,eAAkBjH,EAAOmI,MA+B3C,IAAMC,EAAgB,WACpBjG,IAEGC,MAAK,SAAAC,GAEJ,IAAIgG,EAAW,GACXvI,EAAMI,YAAYsB,UAAUgF,OAAS,GACvC1G,EAAMI,YAAYsB,UAAUkG,SAAQ,SAAAY,GAClCjG,EAAIiB,KAAKoE,SAAQ,SAAApE,GAEXA,EAAK9B,UAAU+G,KAAK,MAAQD,EAAKE,eACnCH,EAASI,KAAKnF,SAKpBjB,EAAIiB,KAAKoE,SAAQ,SAAApE,GACiB,KAA5BA,EAAK9B,UAAU+G,KAAK,KACtBF,EAASI,KAAKnF,OAKlBjB,EAAIiB,KAAKoE,SAAQ,SAAApE,GACiB,KAA5BA,EAAK9B,UAAU+G,KAAK,KACtBF,EAASI,KAAKnF,MAKpB,IAAMoF,EAAwBC,EAAoBN,GAC5CO,EAAeC,EAAkBH,GACjCI,EAAmBC,EAAQH,GAI7BI,EAAclJ,EAAMI,YACxB8I,EAAYvD,SAAWqD,EACvB7H,EAAS,CAAEjB,KAAM,aAAcU,QAASsI,IAGxC,IAAMnH,EAAK/B,EAAMI,YAAYiG,IAC7BhE,EAAe,CAACsD,SAAUqD,GAAmBjH,OAI7C8G,EAAsB,SAAAM,GAE1B,IAAIC,EAAe,GACnBD,EAAUvB,SAAQ,SAAAyB,GAChBD,EAAaT,KAAKU,EAASC,YAAYb,KAAK,QAI9C,IAAMc,EAAqBH,EAAaI,QAAO,SAAC7H,EAAQiE,EAAO6D,GAC7D,OAAO7D,IAAU6D,EAAKrB,QAAQzG,MAI5B+H,EAAyB,GACzBC,EAAa,GACbC,EAAsB,GACtBC,EAAS,GACbN,EAAmB3B,SAAQ,SAACjG,GACX,UAAXA,GAAiC,YAAXA,GAAmC,cAAXA,GAAqC,aAAXA,EAC1E+H,EAAuBf,KAAKhH,GACR,eAAXA,GAAsC,eAAXA,GAAsC,WAAXA,EAC/DgI,EAAWhB,KAAKhH,GACI,SAAXA,GAAgC,WAAXA,GAAkC,gBAAXA,GAAuC,UAAXA,GAAiC,eAAXA,EACvGiI,EAAoBjB,KAAKhH,GAEzBkI,EAAOlB,KAAKhH,MAIhB,IAAImI,EAAiB,GACjBC,EAAe,GACfC,EAAe,GACfC,EAAkB,GAoBtB,OAnBAd,EAAUvB,SAAQ,SAACyB,GACbK,EAAuBQ,SAASb,EAASC,YAAYb,KAAK,KAC5DqB,EAAenB,KAAKU,GACXM,EAAWO,SAASb,EAASC,YAAYb,KAAK,KACvDsB,EAAapB,KAAKU,GACTO,EAAoBM,SAASb,EAASC,YAAYb,KAAK,KAChEuB,EAAarB,KAAKU,GAElBY,EAAgBtB,KAAKU,MAIH,CACpBc,eAAgBL,EAChBM,KAAML,EACNM,eAAgBL,EAChBH,OAAQI,IAOZK,KAAKC,UAAUC,QAAU,SAAUC,GACjC,IAAIC,EAAO,IAAIJ,KAAKK,KAAKC,WAEzB,OADAF,EAAKG,QAAQH,EAAKI,UAAY,GACvBJ,GAGT,IAAM3B,EAAoB,SAAAI,GAWxB,IAVA,IAAI4B,EAAkB,GAElBC,EAAiB,CACnB7B,EAAUgB,eAAgBhB,EAAUiB,KAAMjB,EAAUkB,eAAgBlB,EAAUU,QAG5EoB,EAAQ,IAAIX,KACZ3D,EAAI,EACJuE,EAAc,EAEXvE,EAAI,IAAI,CAGb,IAAIwE,EAAe,GAEnB,OADeF,EAAMG,YAEnB,KAAK,EACHD,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,EACHA,GAAgB,OAChB,MACF,KAAK,EACHA,GAAgB,MAChB,MACF,KAAK,GACHA,GAAgB,MAChB,MACF,KAAK,GACHA,GAAgB,MAGpBA,GAAgB,IAAMF,EAAMH,UAE5B,IAAIO,EAAoBL,EAAeE,GACnCI,EAAe,GAGfC,EAAI,EACR,GAAoB,IAAhBL,EACF,KAAOK,EAAI,GAAG,CACZ,IAAIC,EAAOrG,KAAKC,MAAMD,KAAKE,SAAW2F,EAAeE,GAAaxE,QAClE4E,EAAa3C,KAAK0C,EAAkBG,IACpCD,SAGF,KAAOA,EAAI,GAAG,CACZ,IAAIC,EAAOrG,KAAKC,MAAMD,KAAKE,SAAW2F,EAAeE,GAAaxE,QAClE4E,EAAa3C,KAAK0C,EAAkBG,IACpCD,IAIJ,IAAIE,EAAU,CACZ7G,IAAKuG,EACLpG,OAAQkG,EACRpG,SAAUyG,GAIZP,EAAgBpC,KAAK8C,GAErB,IAAIC,EAAOT,EAAMT,UACjBS,EAAQS,EACRR,GAAeA,EAAc,GAAKF,EAAetE,OACjDC,IAGF,OAAOoE,GAGH9B,EAAU,SAAAtD,GA6Bd,MA5B+B,YAA3B3F,EAAMI,YAAYyG,KACpBlB,EAASiC,SAAQ,YAAkB,EAAf/C,SACT+C,SAAQ,SAAA3C,GACf,GAAyB,aAArBA,EAAQrD,SAAyB,CACnC,IAAM2D,EAAOJ,KAAKC,MAAM,EAAAD,KAAKE,SAAqB,GAC5CsG,EAAOxG,KAAKC,MAAM,EAAAD,KAAKE,SAAsB,GACnDJ,EAAQM,KAAR,UAAkBA,EAAlB,cAA4BoG,OACvB,CACL,IAAMnG,EAAOL,KAAKC,MAAM,GAAAD,KAAKE,SAAuB,IACpDJ,EAAQO,KAAR,UAAkBA,EAAlB,mBAKNG,EAASiC,SAAQ,YAAkB,EAAf/C,SACT+C,SAAQ,SAAA3C,GACf,GAAyB,aAArBA,EAAQrD,SAAyB,CACnC,IAAM2D,EAAOJ,KAAKC,MAAM,EAAAD,KAAKE,SAAqB,GAC5CsG,EAAOxG,KAAKC,MAAM,EAAAD,KAAKE,SAAuB,IACpDJ,EAAQM,KAAR,UAAkBA,EAAlB,cAA4BoG,OACvB,CACL,IAAMnG,EAAOL,KAAKC,MAAM,GAAAD,KAAKE,SAAuB,IACpDJ,EAAQO,KAAR,UAAkBA,EAAlB,mBAMDG,GAGT,OACE,yBAAK5D,GAAG,qBACN,8BACE,yBAAKe,UAAU,eACb,yEAEF,yBAAKA,UAAU,eACb,wDAEF,yBAAKA,UAAU,mBACb,4BAAQ8I,YAAU,OAAO5I,QAASqE,EAAavE,UAAU,YAAzD,WACA,4BAAQ8I,YAAU,OAAO5I,QAASqE,EAAavE,UAAU,YAAzD,eAEF,yBAAKA,UAAU,eACb,sEAEF,yBAAKA,UAAU,mBACb,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,WACA,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,YACA,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,iBACA,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,YACA,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,WACA,4BAAQ8I,YAAU,YAAY5I,QAASqE,EAAavE,UAAU,YAA9D,YAEF,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,kBAAkBE,QA5R5C,SAA0BsE,GAExBA,EAAM1E,iBAIU8E,SAASC,iBAAiB,UAClCC,SAAQ,SAAAC,GACdA,EAAOC,UAAUC,OAAO,aAI1B,IAAImB,EAAclJ,EAAMI,YACxB8I,EAAYrC,KAAOM,EAAUN,KAC7BqC,EAAYxH,UAAYyF,EAAUzF,UAClCP,EAAS,CAAEjB,KAAM,aAAcU,QAASsI,IAGxC,IAAMnH,EAAK/B,EAAMI,YAAYiG,IAE7BhE,EADiB8E,EACQpF,GAGzBuG,MAqQM,c,OCxTKuD,MArBf,WAA4B,IAAD,EACTxK,IAGVyK,EAJmB,oBAIE1L,YAAYuF,SAASX,KAAI,YAA+B,IAA5BJ,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,OAC9Dc,EAAgBC,WAASC,QAAQhB,GAAQiB,YACzCC,EAAiBH,WAASC,QAAQF,GAAeK,WACjDC,EAAeL,WAASM,QAAQJ,YAEtC,GAAIC,GADsBH,WAASC,QAAQI,GAAcD,WAEvD,OAAO,kBAAC,EAAD,CAAMtB,IAAKA,EAAKM,IAAKN,EAAKC,SAAUA,EAAUE,OAAQA,OAIjE,OACE,yBAAKjC,UAAU,gCACZgJ,I,OCgBQC,MA9Bf,WAAqB,IAAD,EACQ1K,IADR,mBACXc,EADW,KACJhB,EADI,KAwBlB,OArBAuE,qBAAU,WACRrD,IAAsBC,MAAK,SAAAC,GACzB,IAAMlC,EAAOkC,EAAIiB,KACdjB,EAAIiB,MAAQrC,EAAS,CAAEjB,KAAM,UAAWG,KAAMA,OAChDmC,OAAM,SAAAC,GAAG,OAAGlC,QAAQC,IAAIiC,QAC3B,IAiBA,yBAAKK,UAAU,WAbXX,EAAM/B,YAKN+B,EAAM/B,YAAYyG,KACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,MANL,kBAAC,IAAD,CAAU9D,GAAG,QCmCNiJ,MAtDf,WAGE,IAAMC,EAAS9I,mBACT+I,EAAe/I,mBACfgJ,EAAUhJ,mBACViJ,EAAWjJ,mBAIjB,SAASkJ,EAAUC,GACjB,OAAOA,EAAMC,MAAM,MAiCrB,OACE,0BAAMzJ,UAAU,uBAAuBO,SAhBzC,SAAsBV,GACpBA,EAAEC,iBACF,IAAI4J,EAfN,WACE,IAAIlD,EAAc+C,EAAUD,EAAS7I,QAAQnC,OACzCM,EAAY2K,EAAUH,EAAa3I,QAAQnC,OAC3CqL,EAAa,CACfnH,KAAM6G,EAAQ5I,QAAQnC,MACtBQ,SAAUqK,EAAO1I,QAAQnC,MACzBkI,YAAaA,EACb5H,UAAWA,GAGb,OADAnB,QAAQC,IAAI,eAAgBiM,GACrBA,EAKYC,GACnBnM,QAAQC,IAAI,QAASgM,GAErBnK,EAAemK,GACdlK,MAAK,SAAAC,GAAG,OAAIhC,QAAQC,IAAI,YAAa+B,EAAIiB,SACzChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAE1BwJ,EAAO1I,QAAQnC,MAAQ,GACvBgL,EAAS7I,QAAQnC,MAAQ,GACzB8K,EAAa3I,QAAQnC,MAAQ,GAC7B+K,EAAQ5I,QAAQnC,MAAQ,KAKtB,2BAAO0B,UAAU,oBAAoBa,UAAQ,EAACF,IAAK0I,EAASzI,YAAY,SACxE,2BAAOZ,UAAU,oBAAoBa,UAAQ,EAACF,IAAKwI,EAAQvI,YAAY,aACvE,2BAAOZ,UAAU,oBAAoBW,IAAKyI,EAAcxI,YAAY,sBACpE,2BAAOZ,UAAU,oBAAoBa,UAAQ,EAACF,IAAK2I,EAAU1I,YAAY,qBACzE,4BAAQZ,UAAU,4BAA4B5C,KAAK,UAAnD,oB,OCjBSyM,MA7Bf,WAAyB,IAAD,EACItL,IADJ,mBACfrB,EADe,KACRmB,EADQ,KAwBtB,OApBAuE,qBAAU,WACRrD,IAAsBC,MAAK,SAAAC,GACzB,IAAMlC,EAAOkC,EAAIiB,KACdjB,EAAIiB,MAAQrC,EAAS,CAAEjB,KAAM,UAAUG,KAAMA,OAC/CmC,OAAM,SAAAC,GAAG,OAAGlC,QAAQC,IAAIiC,QAC3B,IAgBA,6BAbIzC,EAAMI,YAMV,yBAAK0C,UAAW,WACd,8CACA,kBAAC,EAAD,OANE,kBAAC,IAAD,CAAUC,GAAG,QCDN6J,MAlBf,YAAwD,IAApCC,EAAmC,EAAnCA,QAAS3M,EAA0B,EAA1BA,KAAM4M,EAAoB,EAApBA,KAAMxH,EAAc,EAAdA,KAAMyH,EAAQ,EAARA,KAC7C,OAAO,6BACL,4BAAQ7M,KAAK,SAAS4C,UAAS,kBAAa5C,EAAb,qCAAsD8M,cAAY,YAC9FH,EAAQI,OAAO,GAAGC,cAAgBL,EAAQM,MAAM,IAEnD,yBAAKrK,UAAU,iBACZgK,EAAK9H,KAAI,SAAAE,GACR,OAAO,4BAAQpC,UAAU,gBAAgB5C,KAAK,SAASgF,IAAKA,EAAKkI,YAAW9H,EAAM+H,WAAUnI,EAAKlC,QAAS,SAAAL,GACxGoK,EAAKpK,KAEJuC,EAAI+H,OAAO,GAAGC,cAAgBhI,EAAIiI,MAAM,UC2NpCG,MAjOf,WAAkB,IAGZC,EAHW,EACWlM,IADX,mBACRrB,EADQ,KACDmB,EADC,KAIXJ,EAAkB,GAGhByM,EAAYrK,mBAGlBuC,qBAAU,WACR+H,IACApL,IAAsBC,MAAK,SAAAC,GACzB,IAAMlC,EAAOkC,EAAIiB,KACdjB,EAAIiB,MAAQrC,EAAS,CAAEjB,KAAM,UAAWG,KAAMA,OAChDmC,OAAM,SAAAC,GAAG,OAAGlC,QAAQC,IAAIiC,QAC3B,IAEFiD,qBAAU,WACRnF,QAAQC,IAAI,sBACZ,CAACO,EAAgB2F,SAEnB,IAAM+G,EAAiB,WACrBpL,IACCC,MAAK,SAAAC,GACJpB,EAAS,CAACjB,KAAM,cAAeU,QAAS2B,EAAIiB,UAE7ChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,OAGtBiL,EAAe,SAAC/K,GAKpB,GAJAA,EAAEC,iBACF+K,aAAaJ,GAGV5K,EAAE4E,OAAOC,QAAQ,CAClB,IAAIlC,EAAO3C,EAAE4E,OAAOC,QAAQlC,KACxBlE,EAAQuB,EAAE4E,OAAOC,QAAQtC,IAC7B0I,EAAgBtI,EAAMlE,EAAO,IARL,MAUAuB,EAAE4E,OAAlBjC,EAVgB,EAUhBA,KAAMlE,EAVU,EAUVA,MACJ,kBAATkE,IACDmI,IACAD,EAAUjK,QAAQnC,MAAQ,IAE1Bb,QAAQC,IAAI,eAAgB8E,SAAalE,GACzCwM,EAAgBtI,EAAMlE,EAAO,MAG3BwM,EAAkB,SAACtI,EAAMlE,EAAOyM,GAGpCN,EAAYO,YAAW,WACrB,GAAG1M,EACD,OAAQkE,GACN,IAAK,mBACHjD,EAAoBjB,GACnBkB,MAAK,SAAAC,GACJhC,QAAQC,IAAI,kBAAmB+B,EAAIiB,MACnCrC,EAAS,CAACjB,KAAM,cAAeU,QAAS2B,EAAIiB,UAE7ChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAC1B,MACF,IAAK,gBACHJ,EAAiBjB,GAChBkB,MAAK,SAAAC,GACJhC,QAAQC,IAAI,YAAa+B,EAAIiB,MAC7BrC,EAAS,CAACjB,KAAM,cAAeU,QAAS2B,EAAIiB,UAE7ChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAC1B,MACF,IAAK,kBACHJ,EAAmBjB,GAClBkB,MAAK,SAAAC,GACJhC,QAAQC,IAAI,YAAa+B,EAAIiB,MAC7BrC,EAAS,CAACjB,KAAM,cAAeU,QAAS2B,EAAIiB,UAE7ChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAC1B,MACF,IAAK,eACDJ,EAAgBjB,GACjBkB,MAAK,SAAAC,GACJhC,QAAQC,IAAI,YAAa+B,EAAIiB,MAC7BrC,EAAS,CAACjB,KAAM,cAAeU,QAAS2B,EAAIiB,UAC3ChB,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,MAC5B,MACF,QACElC,QAAQC,IAAI,kBAGjBqN,IAGCE,EAAiB,SAACC,GAClBhO,EAAMe,iBAGRA,EAAkBf,EAAMe,iBACR4H,KAAKqF,GAHrBjN,EAAgB4H,KAAKqF,GAMvBzN,QAAQC,IAAI,mBAAoBO,GAChCI,EAAS,CAACjB,KAAM,oBAAqBU,QAASG,KAG1CkN,EAAuB,SAACtL,GAC5BA,EAAEC,iBACFzB,EAAS,CAACjB,KAAM,0BAIZgO,EAAoB,WACxB3N,QAAQC,IAAI,gBA0Gd,OACE,yBAAKsC,UAAU,WA/BX9C,EAAMI,YAMR,8BACI,yBAAK0C,UAAU,OACb,yBAAKA,UAAY,OACjB,kBAAC,EAAD,CAAU+J,QAAQ,sBAAsB3M,KAAK,UAAU4M,KAAM,CAAC,UAAW,WAAY,gBAAiB,WAAY,UAAW,WAAYxH,KAAK,mBAAmByH,KAAMW,KAEvK,yBAAK5K,UAAY,OACjB,kBAAC,EAAD,CAAU+J,QAAQ,yBAAyB3M,KAAK,UAAU4M,KAAM,CAAC,QAAS,UAAW,YAAa,WAAY,aAAc,aAAc,SAAU,OAAQ,SAAU,cAAe,aAAc,SAAUxH,KAAK,gBAAgByH,KAAMW,KAExO,yBAAK5K,UAAY,OACjB,kBAAC,EAAD,CAAU+J,QAAQ,qBAAqB3M,KAAK,UAAU4M,KAAM,CAAC,WAAY,UAAWxH,KAAK,kBAAkByH,KAAMW,MAGnH,yBAAK5K,UAAY,OACf,yBAAKA,UAAY,OACb,2BAAOY,YAAY,SAAS4B,KAAK,eAAe7B,IAAK+J,EAAWW,SAAUT,KAE9E,yBAAK5K,UAAY,OACf,4BAAQA,UAAU,eAAewC,KAAK,gBAAgBtC,QAAS0K,GAA/D,oBArBN,kBAAC,IAAD,CAAU3K,GAAG,MA5EI,WAErB,IAAMqL,EAAgB,CACpBC,eAAgB,gBAGlB,GAAGrO,EAAMW,iBACP,OAAIX,EAAMe,gBAoBN,yBAAK+B,UAAU,MAAMwL,MAAQF,GAC3B,yBAAKtL,UAAU,SACd9C,EAAMW,iBAAiBqE,KAAI,SAACgJ,EAAGrH,GAAJ,OACxB,yBAAKzB,IAAK8I,EAAG3H,IAAIvD,UAAU,iCACzB,yBAAKA,UAAU,cAAcE,QAAS,kBAAI+K,EAAeC,KAAMA,EAAG1I,MAClE,yBAAKxC,UAAU,uBACb,wBAAIA,UAAU,+BACZ,wBAAIA,UAAU,mBAAd,aAA2CkL,EAAGpM,UAC9C,wBAAIkB,UAAU,mBAAd,YAA0CkL,EAAG1E,aAC7C,wBAAIxG,UAAU,mBAAd,cAA4CkL,EAAGtM,kBAMzD,yBAAKoB,UAAU,uBACb,yBAAKA,UAAW,OAChB,kDACE,yBAAKA,UAAU,OACb,4BAAQA,UAAU,kBAAkBE,QAASiL,GAA7C,qBAEF,yBAAKnL,UAAU,OACb,4BAAQA,UAAU,kBAAkBE,QAASkL,GAA7C,wBAIHlO,EAAMe,gBAAgBiE,KAAI,SAACgJ,EAAGrH,GAAJ,OACzB,yBAAKzB,IAAKyB,EAAE7D,UAAU,iCACpB,yBAAKA,UAAU,eAAekL,EAAG1I,MACjC,yBAAKxC,UAAU,uBACb,wBAAIA,UAAU,+BACZ,wBAAIA,UAAU,mBAAd,aAA2CkL,EAAGpM,UAC9C,wBAAIkB,UAAU,mBAAd,YAA0CkL,EAAG1E,aAC7C,wBAAIxG,UAAU,mBAAd,cAA4CkL,EAAGtM,mBAnD3D,yBAAKoB,UAAU,MAAMwL,MAAOF,GACzBpO,EAAMW,iBAAiBqE,KAAI,SAACgJ,EAAGrH,GAAJ,OAC1B,yBAAKzB,IAAK8I,EAAG3H,IAAIvD,UAAU,uCACzB,yBAAKA,UAAU,cAAcE,QAAS,kBAAI+K,EAAeC,KAAMA,EAAG1I,MAClE,yBAAKxC,UAAU,uBACb,wBAAIA,UAAU,+BACZ,wBAAIA,UAAU,mBAAd,aAA2CkL,EAAGpM,UAC9C,wBAAIkB,UAAU,mBAAd,YAA0CkL,EAAG1E,aAC7C,wBAAIxG,UAAU,mBAAd,cAA4CkL,EAAGtM,kBA0F5D6M,KCvMQC,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3H,IACjC,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,YAAYC,UAAW5C,IACzC,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,UAAUC,UAAWhC,IACvC,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,UAAUC,UAAWrB,SCRjCsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzH,SAAS0H,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjN,MAAK,SAAAkN,GACJA,EAAaC,gBAEdjN,OAAM,SAAAkN,GACLnP,QAAQmP,MAAMA,EAAMC,c","file":"static/js/main.c7b0603e.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\n//function to pass to useReducer()\nconst reducer = (state, action) => {\n\n  switch (action.type){\n    case 'login':\n      return {\n        ...state,\n        isLoggedIn: true,\n        currentUser: action.user,\n        test: action.test\n      };\n    case 'consolelog':\n      console.log('STATE in reducer consolelog: ', state);\n      return state;\n    case 'setuser':\n      //set currentUser, but clear password \n      //keeping isLoggedIn boolean for the time being\n      let userToSet = action.user;\n      delete userToSet.password;\n      return {\n        ...state,\n        currentUser: userToSet,\n        test: action.test,\n        isLoggedIn: true\n      }\n    case 'setworkouts':\n      return {\n        ...state,\n        workoutsToRender: action.payload\n      }\n    case 'logout':\n      return{\n        ...state,\n        isLoggedIn: false,\n        currentUser: null\n      }\n    case 'showsignup':\n      return {\n        ...state,\n        showLogIn: false,\n        showSignUp: true\n      }\n    case 'showlogin':\n      return{\n        ...state,\n        showSignUp: false,\n        showLogIn: true,\n      }\n    case 'updateUser':\n        return {\n          ...state,\n          currentUser: action.payload\n        }\n    case 'addclickedworkout':\n      return {\n        ...state,\n        clickedWorkouts: action.payload\n      }\n    case 'clearclickedworkouts':\n      return {\n        ...state,\n        clickedWorkouts: null\n      }\n    default:\n      console.log('STATE in reducer: ', state);\n      return state;\n  }\n};\n\nconst StoreProvider = ({...props}) => {\n  const [state, dispatch] = useReducer(reducer , {\n    currentUser: null,\n  });\n  return <Provider value={[state, dispatch]} {...props} />\n};\n\nconst useStoreContext = () => useContext(StoreContext);\n\nexport { StoreProvider, useStoreContext };","import axios from 'axios';\n\nexport default {\n  // get all workouts\n  getWorkouts: function(){\n    return axios.get('/api/workouts');\n  },\n  regexSearch: function(query){\n    return axios.get('/api/workouts/regex/'+ query);\n  },\n  //search for workouts by equipement\n  findByEquipment: function(equipment){\n    return axios.get('/api/workouts/equipment/'+ equipment);\n  },\n  //search for workouts by muscle\n  findByMuscle: function(muscle){\n    return axios.get('/api/workouts/musclegroup/' + muscle);\n  },\n  //search for workouts by category\n  findByCategory: function(category){\n    return axios.get('/api/workouts/category/' + category);\n  },\n  // add user from login\n  addUser: function(userData){\n    return axios.post('/api/users', userData);\n  },\n  // Updates a user\n  updateUser: function(userData, id) {\n    return axios.put(`/api/users/${id}`, userData);\n  },\n  // get all users\n  findAllUsers: function(){\n    return axios.get('/api/users');\n  },\n  // create workout\n  addWorkout: function(workoutData){\n    return axios.post('/api/workouts', workoutData);\n  },\n  //login\n  login: function(user){\n    return axios.post('/api/users/login', user);\n  },\n  //logout\n  logout: function(){\n    return axios.post('/api/users/logout');\n  },\n  //getuser\n  getLoggedInUser: function(){\n    return axios.post('/api/users/getloggedinuser');\n  }\n}","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport API from '../../utils/API';\nimport './style.css';\n\nfunction Nav() {\n\n  //Test nav component to read to store and return to home page\n  const [store, dispatch] = useStoreContext();\n  const logOut = () =>{\n    API.logout().then(res =>{\n      console.log('RES IN LOGOUT ', res);\n      dispatch({type: 'logout'} );\n\n    }).catch(err => console.log(err));\n  }\n\n  const signUp =  (e) => {\n    e.preventDefault()\n    dispatch({ type: 'showsignup' });\n  };\n  const logIn = (e) => {\n    e.preventDefault()\n    dispatch({type: 'showlogin'});\n  };\n\n  const setRender = () => {\n    if (store.isLoggedIn) {\n      return(\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Workout Tracker\n          </Link>\n          <Link className='nav-link' to='/calendar'>Calendar</Link>\n          <Link className='nav-link' to='/create'>Create</Link>\n          <Link className='nav-link' to='/search'>Search</Link>\n          <button className='nav-btns btn btn-warning' onClick={logOut}>Logout</button>\n        </nav>\n      );\n    } else {\n      return(\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <Link className=\"navbar-brand\" to=\"/\"> Workout Tracker </Link>\n          <form className='form-inline'>\n            <button className='nav-btns btn btn-info left-btn' onClick={signUp}>Sign Up</button>\n            <button className='btn nav-btns btn-info right-btn' onClick={logIn}>Log In</button>\n          </form>\n        </nav>\n      )\n    }\n  };\n\n  return (\n    <div>\n      {setRender()}\n    </div>\n  );\n  \n};\n\nexport default Nav;","import React, { useRef } from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport API from '../../utils/API';\n\nexport default function LoginForm() {\n\n  const [, dispatch] = useStoreContext();\n\n  const userRef = useRef();\n  const pwRef = useRef();\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    const user= {\n      email: userRef.current.value,\n      password: pwRef.current.value,\n    }\n    API.login(user).then(res => {\n\n      console.log('ABOUT TO CALL DISPATACH, RES.DATA: ', res.data);\n      // update global state with current user data\n      dispatch({\n        type: 'setuser',\n        user: res.data,\n        test: 'we got us a user'\n      });\n    })\n    .catch(err => console.log(err));\n    \n    userRef.current.value = \"\";\n    pwRef.current.value = \"\";\n  };\n  return (\n    <form className=\"form-group mt-5 mb-5\" onSubmit={handleSubmit}>\n      <div className='row'>\n        <div className='col'>\n        <input className=\"form-control mb-5\" ref={userRef} placeholder=\"Email\" />\n        </div>\n        <div className = 'col'>\n        <input className=\"form-control mb-5\" required ref={pwRef} placeholder=\"password\" />\n        </div>\n      </div>\n        <button className=\"btn btn-success mt-3 mb-5\" type=\"submit\">Sign In</button>\n    </form>\n  );\n};","import React, { useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"./style.css\";\n\nfunction SignUpForm(){\n\n  const [,dispatch] = useStoreContext();\n  //list of references to differentiate inputs\n  const emailRef = useRef();\n  const firstRef = useRef();\n  const lastRef = useRef();\n  const pwRef1 = useRef();\n  const pwRef2 = useRef();\n\n  //read two passwords so we can make sure they are the same\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const pw1 = pwRef1.current.value;\n    const pw2 = pwRef2.current.value;\n    const email = emailRef.current.value;\n\n    if(validateInputs(email, pw1, pw2)){\n      let newUser = {\n        email,\n        password: pw1,\n        firstName: firstRef.current.value,\n        lastName: lastRef.current.value\n      };\n\n      //adds user to the database\n      API.addUser(newUser)\n      .then(res => {\n        console.log('res.data ', res.data);\n        const user = res.data;\n        if(res.data){\n          dispatch({ type: 'setuser',user: user})\n        }\n      })\n      .catch(err => console.log(err));\n    }\n    //TODO\n    //alert user of invalid input\n\n    //clear input fields\n    emailRef.current.value = '';\n    firstRef.current.value = '';\n    lastRef.current.value = '';\n    pwRef1.current.value = '';\n    pwRef2.current.value = '';\n  };\n\n  const redirect = () => {\n    console.log('wtf');\n    return ( <Redirect to='/'/> );\n  }\n\n\n  //funciton returns a boolean depending on if the string matches the reg ex inside\n  const checkPassword = password => {\n    const pwRegEx = /[a-zA-Z0-9]{8,}/;\n    return pwRegEx.test(password);\n  };\n\n  //funciton returns a boolean depending on if the string matches the reg ex inside\n  const checkEmail = email => {\n    const emailRegEx = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return emailRegEx.test(email);\n  }\n\n  // function to validate user email and password inputs\n  //returns a boolean value\n  function validateInputs(email, pw1, pw2){\n\n    if (pw1 === pw2 && checkEmail(email) && checkPassword(pw1) && checkPassword(pw2)){\n      console.log('valid inputs');\n      return true\n    } else if (pw1 !== pw2){\n      console.log('Your passwords do not match');\n      return false\n    } else if (!checkPassword(pw1) || !checkPassword(pw2)){\n      console.log('Your password does not meet the minimum requirements');\n      return false\n    } else if (!checkEmail(email)){\n      console.log('You did not enter a valid email');\n      return false\n    }  \n  }\n\n  return (\n    <form onSubmit={handleSubmit} id=\"signup-form\" className=\"p-3 rounded\">\n      <div className=\"form-row text-left mb-2\">\n        <div className=\"col-md-6\">\n          <label>First Name</label>\n          <input className=\"form-control\" ref={firstRef} placeholder=\"First name\" />\n        </div>\n        <div className=\"col-md-6\">\n          <label>Last Name</label>\n          <input className=\"form-control\" ref={lastRef} placeholder=\"Last name\" />\n        </div>\n      </div>\n      <div className=\"form-group text-left\">\n        <label>Email</label>\n        <input className=\"form-control\" required ref={emailRef} placeholder=\"Email\" />\n        <small class=\"form-text\">Don't worry.  We'll never share your email with anyone else.</small>\n      </div>\n      <div className=\"form-row text-left mb-2\">\n        <div className=\"col-md-6\">\n          <label>Password</label>\n          <input className=\"form-control\" required ref={pwRef1} placeholder=\"password\" type=\"password\" />\n        </div>\n        <div className=\"col-md-6\">\n          <label>Re-enter password</label>\n          <input className=\"form-control\" required ref={pwRef2} placeholder=\"re enter password\" type=\"password\" />\n        </div>\n      </div>\n      <button className=\"btn btn-success\" type=\"submit\">Create User</button>\n    </form>\n  );\n}\nexport default SignUpForm;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Card({ day, workouts, jsDate }) {\n  const workoutSection = workouts.map(workout => {\n    if (workout.category === \"strength\") {\n      return <li className=\"list-group-item\" key={Math.floor(Math.random() * 100000)}>\n        <strong>{workout.name}</strong> - {workout.sets}\n      </li>\n    } else {\n      return <li className=\"list-group-item\" key={Math.floor(Math.random() * 100000)}>\n        <strong>{workout.name}</strong> - {workout.time}\n      </li >\n    }\n  })\n\n  return(\n    <div className=\"card calendar-card border-dark mb-3\">\n      <div className=\"card-header\">{day}</div>\n      <div className=\"card-body text-dark\">\n        <ul className=\"list-group list-group-flush\">\n          {workoutSection}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React, { useEffect } from 'react';\nimport { DateTime } from \"luxon\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport './style.css';\nimport API from \"../../utils/API\";\nimport Card from \"../Card\";\n\nfunction CurrentUser (){\n\n  const [state, dispatch] = useStoreContext();\n  const user = state.currentUser;\n\n  useEffect(() => {\n\n    API.getLoggedInUser().then(res =>{\n      const user = res.data;\n      if(res.data) { dispatch({ type: 'setuser', user: user});}\n    }).catch(err=> console.log(err));\n\n    if(user.calendar){\n      user.calendar.map((day, index) => {\n        const jsDate = day.jsDate;\n        const jsDateCleaned = DateTime.fromISO(jsDate).toISODate();\n        const jsMilliseconds = DateTime.fromISO(jsDateCleaned).toMillis();\n        const todayCleaned = DateTime.local().toISODate();\n        const todayMilliseconds = DateTime.fromISO(todayCleaned).toMillis();\n        if (jsMilliseconds < todayMilliseconds) {\n          const id = user._id;\n          user.calendar.splice(index, 1);\n          dispatch({type: \"updateUser\", payload: user});\n          API.updateUser(user, id);\n        };\n      })\n    }\n  }, []);\n\n  const listItems= (itemArray, itemName) => {\n\n      if(itemArray !== user.goals){\n        if (itemArray.length > 0){\n          return (\n            <div>\n            {itemArray.map((e,i) => (\n              <li className='list-group-item' key={i}>\n                {e}\n              </li>\n            ))}\n            </div>\n          );\n        } else {\n          return (\n            <p>No {itemName} Added</p>\n          );\n        }\n    }\n    \n  };\n\n  const setCalendar = () => {\n    if(state.currentUser.calendar && state.currentUser.calendar.length > 0){\n      const workoutSection = user.calendar[0].workouts.map(workout => {\n        if (workout.category === \"strength\") {\n          return <li className=\"list-group-item\" key={Math.floor(Math.random() * 100000)}>\n            <strong>{workout.name}</strong> - {workout.sets}\n          </li>\n        } else {\n          return <li className=\"list-group-item\" key={Math.floor(Math.random() * 100000)}>\n            <strong>{workout.name}</strong> - {workout.time}\n          </li >\n        }\n      })\n      return (\n        <div className=\"card cal-card border-dark mb-3\">\n          <div className=\"card-header\">Up next on my calendar:{' '} {user.calendar[0].day}</div>\n          <div className=\"card-body text-dark\">\n            <ul className=\"list-group list-group-flush\">\n              {workoutSection}\n            </ul>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"card cal-card border-dark mb-3\">\n          <div className=\"card-header\">No calendar made yet</div>\n          <div className='card-body text-dark'>\n          </div>\n        </div>\n      )\n    }\n  }\n  const getRender = () => {\n    return (\n      <div className ='container d-flex'>\n        <div className='row'>\n          <div className='col'>\n            <div className=\"card user-card border-dark mb-3\">\n              <div className=\"card-header\">My Equipment</div>\n                <div className=\"card-body text-dark\">\n                  <ul className=\"list-group list-group-flush\">\n                    {listItems(user.equipment, 'Equipment')}\n                  </ul>\n                </div>\n            </div>\n          </div>\n          <div className='col'>\n            <div className=\"card user-card border-dark mb-3\">\n              <div className=\"card-header\">My Goal</div>\n                <div className=\"card-body text-dark\">\n                  <ul className=\"list-group list-group-flush\">\n                    {user.goal ? user.goal : <p>No goal set yet</p>}\n                  </ul>\n                </div>\n            </div>\n          </div>\n        </div>\n        {setCalendar()}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\" >\n          <h2 className=\"display-4\">Welcome, {user.firstName}</h2>\n          <h5 className=\"display-5 text-center\">Here's what your day looks like:</h5>\n        </div>\n      </div>\n      {getRender()}\n    </div>\n  );\n};\nexport default CurrentUser;","import React from 'react';\nimport './style.css';\n\nfunction Greeting () {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Welcome to Workout Tracker</h1>\n        <p className=\"lead\">You made the first step towards achieving your fitness goals.</p> \n        <p className='lead'>Sign up or Log in to continue</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Greeting;","import React, { useState, useEffect } from 'react';\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport LoginForm from '../components/LoginForm';\nimport SignUpForm from '../components/SignUpForm';\nimport API from '../utils/API';\nimport CurrentUser from '../components/CurrentUser';\nimport Greeting from '../components/Greeting';\n\n\nfunction Home() {\n  const [state, dispatch] = useStoreContext();\n  \n  //get user data from api and store to global context\n  useEffect(()=> {\n    API.getLoggedInUser().then(res =>{\n      const user = res.data;\n      if(res.data) { dispatch({ type: 'setuser', user: user});}\n    }).catch(err=> console.log(err));\n  },[]);\n\n  const getStuffToRender = () =>{\n    let user = state.currentUser;\n    if(user){\n      return (\n        <CurrentUser />\n      );\n    } else {\n      return (\n        <div className='wrapper'>\n          <Greeting />\n          {state.showSignUp ? <SignUpForm /> : <p></p> }\n          {state.showLogIn ? <LoginForm /> : <p></p> }\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='wrapper'>\n      {getStuffToRender()}\n    </div>\n  );\n};\nexport default Home;","import React, { useState } from \"react\";\nimport API from \"../../utils/API\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"./style.css\";\n\nfunction GoalsForm() {\n  const [formState, setFormState] = useState({\n    goal: \"\",\n    equipment: []\n  });\n\n  const [state, dispatch] = useStoreContext();\n\n  function updateState(event) {\n    // Prevents deafult\n    event.preventDefault();\n\n    // Saves key and value from target\n    const type = event.target.dataset.type;\n    const value = event.target.innerText;\n\n    // Updates Goal\n    if (type === \"goal\") {\n      // Updates goal state\n      setFormState({ ...formState, [type]: value });\n\n      // Clears \"active class from goals section\"\n      const buttons = document.querySelectorAll(\".goalsbtn\");\n      buttons.forEach(button => {\n        button.classList.remove(\"active\");\n      })\n\n      // Makes event target active\n      event.target.classList.add(\"active\");\n\n      // Updates equipment\n    } else {\n      // Toggles active class\n      event.target.classList.toggle(\"active\");\n\n      // Adds value to equipment state if recently made active\n      if (event.target.classList.contains(\"active\")) {\n        setFormState({ ...formState, [type]: [...formState.equipment, value] });\n      } else {\n        // Here we remove from array if made inactive\n        const idx = formState.equipment.indexOf(value);\n\n        // A copy of equipment is created, spliced, and placed into equipment\n        let newArr = formState.equipment\n        formState.equipment.splice(idx, 1);\n        setFormState({ ...formState, [type]: newArr });\n      }\n    };\n  };\n\n  function handleFormSubmit(event) {\n    // Prevents event default\n    event.preventDefault();\n\n\n    // Clears form\n    const buttons = document.querySelectorAll(\"button\");\n    buttons.forEach(button => {\n      button.classList.remove(\"active\");\n    });\n\n    // Updates the active user's data in global state\n    let updatedUser = state.currentUser;\n    updatedUser.goal = formState.goal;\n    updatedUser.equipment = formState.equipment;\n    dispatch({ type: 'updateUser', payload: updatedUser });\n\n    // Updates active user's info in DB\n    const id = state.currentUser._id;\n    const userData = formState;\n    API.updateUser(userData, id);\n\n    // Generates a workout\n    buildCalendar();\n  };\n\n  const buildCalendar = () => {\n    API.getWorkouts()\n      // res.data gets all workouts\n      .then(res => {\n        // Filters exercises to ones included in user's available equipment\n        let filtered = [];\n        if (state.currentUser.equipment.length > 0) {\n          state.currentUser.equipment.forEach(item => {\n            res.data.forEach(data => {\n              // Adds to filtered array if user has correct equipment.\n              if (data.equipment.join(\"\") === item.toLowerCase()) {\n                filtered.push(data);\n              };\n            });\n          });\n          // Adds bodyweight workouts after filtering by available equipment.\n          res.data.forEach(data => {\n            if (data.equipment.join(\"\") === \"\") {\n              filtered.push(data);\n            };\n          });\n          // If no equipment selected, only bodyeight exercises are added\n        } else {\n          res.data.forEach(data => {\n            if (data.equipment.join(\"\") === \"\") {\n              filtered.push(data);\n            };\n          });\n        };\n\n        const exercisesSortedByDate = collectExerciseDays(filtered);\n        const userCalendar = buildCalendarDays(exercisesSortedByDate);\n        const finishedCalendar = addReps(userCalendar);\n\n        \n        // Updates the active user's calendar in global state\n        let updatedUser = state.currentUser;\n        updatedUser.calendar = finishedCalendar;\n        dispatch({ type: 'updateUser', payload: updatedUser });\n\n        // Updates active user's info in DB\n        const id = state.currentUser._id;\n        API.updateUser({calendar: finishedCalendar}, id);\n      });\n  };\n\n  const collectExerciseDays = exercises => {\n    // Creates array of muscle groups to hit\n    let muscleGroups = [];\n    exercises.forEach(exercise => {\n      muscleGroups.push(exercise.muscleGroup.join(\"\"));\n    });\n\n    // Removes redundant muscles\n    const uniqueMuscleGroups = muscleGroups.filter((muscle, index, self) => {\n      return index === self.indexOf(muscle);\n    })\n\n    // Sorts muscle groups available into different arrays\n    let chestAndTricepsMuscles = [];\n    let legMuscles = [];\n    let backAndBicepMuscles = [];\n    let cardio = [];\n    uniqueMuscleGroups.forEach((muscle) => {\n      if (muscle === \"chest\" || muscle === \"triceps\" || muscle === \"shoulders\" || muscle === \"forearms\") {\n        chestAndTricepsMuscles.push(muscle);\n      } else if (muscle === \"hamstrings\" || muscle === \"quadriceps\" || muscle === \"calves\") {\n        legMuscles.push(muscle);\n      } else if (muscle === \"lats\" || muscle === \"biceps\" || muscle === \"middle back\" || muscle === \"traps\" || muscle === \"lower back\") {\n        backAndBicepMuscles.push(muscle)\n      } else {\n        cardio.push(muscle);\n      };\n    });\n\n    let chestExercises = [];\n    let legExercises = [];\n    let backExerises = [];\n    let cardioExercises = [];\n    exercises.forEach((exercise) => {\n      if (chestAndTricepsMuscles.includes(exercise.muscleGroup.join(\"\"))) {\n        chestExercises.push(exercise);\n      } else if (legMuscles.includes(exercise.muscleGroup.join(\"\"))) {\n        legExercises.push(exercise);\n      } else if (backAndBicepMuscles.includes(exercise.muscleGroup.join(\"\"))) {\n        backExerises.push(exercise);\n      } else {\n        cardioExercises.push(exercise);\n      }\n    })\n\n    let sortedExercises = {\n      chestAndBiceps: chestExercises,\n      legs: legExercises,\n      backAndTriceps: backExerises,\n      cardio: cardioExercises\n    };\n\n    return sortedExercises;\n  };\n\n  // Helper function for accessing days beyond today\n  Date.prototype.nextDay = function (days) {\n    let date = new Date(this.valueOf());\n    date.setDate(date.getDate() + 2);\n    return date;\n  }\n\n  const buildCalendarDays = exercises => {\n    let workoutCalendar = [];\n\n    let exercisesArray = [\n      exercises.chestAndBiceps, exercises.legs, exercises.backAndTriceps, exercises.cardio\n    ];\n\n    let today = new Date();\n    let i = 0;\n    let workoutType = 0;\n    // Updates day by 2 30 times\n    while (i < 30) {\n\n      // Format the date to an easily readable string\n      let readableDate = \"\";\n      let monthNum = today.getMonth();\n      switch (monthNum) {\n        case 0:\n          readableDate += \"Jan\";\n          break;\n        case 1:\n          readableDate += \"Feb\";\n          break;\n        case 2:\n          readableDate += \"Mar\";\n          break;\n        case 3:\n          readableDate += \"Apr\";\n          break;\n        case 4:\n          readableDate += \"May\";\n          break;\n        case 5:\n          readableDate += \"Jun\";\n          break;\n        case 6:\n          readableDate += \"Jul\";\n          break;\n        case 7:\n          readableDate += \"Aug\";\n          break;\n        case 8:\n          readableDate += \"Sept\";\n          break;\n        case 9:\n          readableDate += \"Oct\";\n          break;\n        case 10:\n          readableDate += \"Nov\";\n          break;\n        case 11:\n          readableDate += \"Dec\";\n          break;\n      }\n      readableDate += \" \" + today.getDate();\n\n      let possibleExercises = exercisesArray[workoutType];\n      let dayExercises = [];\n\n      // Inserts five workouts a day if strength, three if cardio/abs day\n      let j = 0;\n      if (workoutType !== 3) {\n        while (j < 5) {\n          let rand = Math.floor(Math.random() * exercisesArray[workoutType].length);\n          dayExercises.push(possibleExercises[rand]);\n          j++;\n        }\n      } else {\n        while (j < 3) {\n          let rand = Math.floor(Math.random() * exercisesArray[workoutType].length);\n          dayExercises.push(possibleExercises[rand]);\n          j++;\n        }\n      }\n\n      let dayPlan = {\n        day: readableDate,\n        jsDate: today,\n        workouts: dayExercises\n\n      };\n\n      workoutCalendar.push(dayPlan);\n      // Increments to next day\n      let next = today.nextDay();\n      today = next;\n      workoutType = (workoutType + 1) % exercisesArray.length;\n      i++;\n    };\n\n    return workoutCalendar;\n  };\n\n  const addReps = calendar => {\n    if (state.currentUser.goal === \"Bulk up\") {\n      calendar.forEach(({ workouts }) => {\n        workouts.forEach(workout => {\n          if (workout.category === \"strength\") {\n            const sets = Math.floor(Math.random() * (5 - 3) + 3);\n            const reps = Math.floor(Math.random() * (12 - 8) + 8);\n            workout.sets = `${sets} x ${reps}`;\n          } else {\n            const time = Math.floor(Math.random() * (60 - 40) + 40);\n            workout.time = `${time} minutes`;\n          }\n        });\n      });\n    } else {\n      calendar.forEach(({ workouts }) => {\n        workouts.forEach(workout => {\n          if (workout.category === \"strength\") {\n            const sets = Math.floor(Math.random() * (6 - 4) + 4);\n            const reps = Math.floor(Math.random() * (20 - 15) + 15);\n            workout.sets = `${sets} x ${reps}`;\n          } else {\n            const time = Math.floor(Math.random() * (70 - 50) + 50);\n            workout.time = `${time} minutes`;\n          }\n        });\n      });\n    }\n\n    return calendar;\n  };\n\n  return (\n    <div id=\"content-container\">\n      <form>\n        <div className=\"form-header\">\n          <h3>Let us help you build a workout regimen.</h3>\n        </div>\n        <div className=\"form-header\">\n          <h4>What is your main goal?</h4>\n        </div>\n        <div className=\"buttons-section\">\n          <button data-type=\"goal\" onClick={updateState} className=\"goalsbtn\">Bulk up</button>\n          <button data-type=\"goal\" onClick={updateState} className=\"goalsbtn\">Cut weight</button>\n        </div>\n        <div className=\"form-header\">\n          <h4>What equipment do you have available?</h4>\n        </div>\n        <div className=\"buttons-section\">\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Barbell</button>\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Dumbbell</button>\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Exercise Ball</button>\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Curl Bar</button>\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Machine</button>\n          <button data-type=\"equipment\" onClick={updateState} className=\"equipbtn\">Bicycle</button>\n        </div>\n        <div className=\"buttons-section\">\n          <button className=\"btn btn-primary\" onClick={handleFormSubmit}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default GoalsForm;","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport { useStoreContext, StoreProvider } from \"../../utils/GlobalState\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction WorkoutCalendar() {\n  const [state] = useStoreContext();\n\n  // Creates a workout for each card that is on either today or later\n  const workoutCards = state.currentUser.calendar.map(({ day, workouts, jsDate}) => {\n    const jsDateCleaned = DateTime.fromISO(jsDate).toISODate();\n    const jsMilliseconds = DateTime.fromISO(jsDateCleaned).toMillis();\n    const todayCleaned = DateTime.local().toISODate();\n    const todayMilliseconds = DateTime.fromISO(todayCleaned).toMillis();\n    if (jsMilliseconds >= todayMilliseconds) {\n      return <Card day={day} key={day} workouts={workouts} jsDate={jsDate} />\n    }\n  });\n\n  return(\n    <div className=\"card-holder d-flex flex-wrap\">\n      {workoutCards}\n    </div>\n  );\n};\n\nexport default WorkoutCalendar;","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport GoalsForm from \"../components/GoalsForm\";\nimport WorkoutCalendar from \"../components/WorkoutCalendar\";\nimport API from '../utils/API';\nimport \"./calendar.css\";\n\nfunction Calendar() {\n  const [store, dispatch] = useStoreContext();\n\n  useEffect(()=> {\n    API.getLoggedInUser().then(res =>{\n      const user = res.data;\n      if(res.data) { dispatch({ type: 'setuser', user: user});}\n    }).catch(err=> console.log(err));\n  },[]);\n\n  const renderComponents = () => {\n    //send user to homepage if they are not logged in\n    if(!store.currentUser){\n      return(\n        <Redirect to='/'/>\n      );\n    }\n    if (store.currentUser.goal) {\n      return <WorkoutCalendar />\n    } else {\n      return <GoalsForm />\n    };\n  };\n  \n  return(\n    <div className=\"wrapper\">\n      {renderComponents()}\n    </div>\n  )\n};\nexport default Calendar;","import React, { useRef } from 'react';\nimport API from '../../utils/API';\n\nfunction WorkoutForm(){\n\n  //references to get text values from inputs\n  const catRef = useRef();\n  const equipmentRef = useRef();\n  const nameRef = useRef();\n  const groupRef = useRef();\n  \n  //split text from inputs into an array\n  //note that current set up is to split on a , with a space\n  function makeArray(input){\n    return input.split(', ');\n  };\n\n  //funciton to create a workout object from inputs\n  // to match the workout model in the database\n  function prepareSubmission(){\n    let muscleGroup = makeArray(groupRef.current.value);\n    let equipment = makeArray(equipmentRef.current.value);\n    let newWorkout = {\n      name: nameRef.current.value,\n      category: catRef.current.value,\n      muscleGroup: muscleGroup,\n      equipment: equipment\n    }\n    console.log('NEWWORKOUT: ', newWorkout);\n    return newWorkout;\n  }\n\n  function handleSubmit(e){\n    e.preventDefault();\n    let workoutToAdd = prepareSubmission();\n    console.log('WTA: ', workoutToAdd);\n\n    API.addWorkout(workoutToAdd)\n    .then(res => console.log(\"Respone: \", res.data))\n    .catch(err => console.log(err));\n\n    catRef.current.value = '';\n    groupRef.current.value = '';\n    equipmentRef.current.value = '';\n    nameRef.current.value = '';\n  }\n\n  return (\n    <form className=\"form-group mt-5 mb-5\" onSubmit={handleSubmit}>\n      <input className=\"form-control mb-5\" required ref={nameRef} placeholder=\"Name\" />\n      <input className=\"form-control mb-5\" required ref={catRef} placeholder=\"Category\" />\n      <input className=\"form-control mb-5\" ref={equipmentRef} placeholder=\"Equipement needed\" />\n      <input className=\"form-control mb-5\" required ref={groupRef} placeholder=\"Targeted Muscles\" />\n      <button className=\"btn btn-success mt-3 mb-5\" type=\"submit\">Create Workout</button>\n    </form>\n  );\n};\nexport default WorkoutForm;","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport WorkoutForm from '../components/WorkoutForm';\nimport { useStoreContext } from '../utils/GlobalState'\nimport API from '../utils/API';\nimport { Store } from 'express-session';\n\nfunction CreateWorkout(){\n  const [state, dispatch] = useStoreContext();\n\n  //get user data from api and store to global context\n  useEffect(()=>{\n    API.getLoggedInUser().then(res =>{\n      const user = res.data;\n      if(res.data) { dispatch({ type: 'setuser',user: user});}\n    }).catch(err=> console.log(err));\n  },[]);\n  \n  const render = () => {\n    if(!state.currentUser){\n      return(\n        <Redirect to='/'/>\n      )\n    }\n  return(\n    <div className ='wrapper'>\n      <h1>Create Workout</h1>\n      <WorkoutForm />\n    </div>\n  );\n  };\n  return(\n    <div>{render()}</div>\n  );\n  \n};\nexport default CreateWorkout;","import React from \"react\";\n\nfunction DropDown({ display, type, keys, name, func }) {\n  return <div>\n    <button type=\"button\" className={`btn btn-${type} dropdown-toggle btn-lg btn-block`} data-toggle=\"dropdown\">\n      {display.charAt(0).toUpperCase() + display.slice(1)}\n    </button>\n    <div className=\"dropdown-menu\">\n      {keys.map(key => {\n        return <button className=\"dropdown-item\" type=\"button\" key={key} data-name={name} data-key={key} onClick={e => {\n          func(e)\n        }}>\n          {key.charAt(0).toUpperCase() + key.slice(1)}\n        </button>\n      })}\n\n    </div>\n  </div>\n};\n\nexport default DropDown;","import React, { useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useStoreContext } from '../utils/GlobalState';\nimport DropDown from '../components/DropDown';\nimport API from '../utils/API';\n\nfunction Search(){\n  const [state, dispatch] = useStoreContext();\n\n  let timeoutID; //ID to clear timeout if textfield changes\n  let clickedWorkouts = []; //declare empty array to store clicked workouts\n  \n  //add Refs to be able manipulate user text fields\n  const searchRef = useRef();\n\n  //get user data from api and store to global context\n  useEffect(()=>{\n    getAllWorkouts();\n    API.getLoggedInUser().then(res =>{\n      const user = res.data;\n      if(res.data) { dispatch({ type: 'setuser', user: user});}\n    }).catch(err=> console.log(err));\n  },[]);\n\n  useEffect(()=> {\n    console.log('HIT THE NEW ONE ');\n  },[clickedWorkouts.length])\n  //get all workouts in database\n  const getAllWorkouts = () => {\n    API.getWorkouts()\n    .then(res => {\n      dispatch({type: 'setworkouts', payload: res.data})\n    })\n    .catch(err => console.log(err));\n  };\n  \n  const handleChange = (e) => {\n    e.preventDefault();\n    clearTimeout(timeoutID); //clear timeout if input changes\n\n    // check if change is from drop down and set variables accordingly\n    if(e.target.dataset){\n      let name = e.target.dataset.name;\n      let value = e.target.dataset.key;\n      debouncedSearch(name, value, 50); //send API search after 700 ms\n    }\n      const { name, value } = e.target;\n    if(name === 'clear-filters'){\n      getAllWorkouts();\n      searchRef.current.value = '';\n    }\n      console.log('name, value ', name, typeof value);\n      debouncedSearch(name, value, 700);\n  };\n\n  const debouncedSearch = (name, value, interval) => {\n\n    //set a timeout to wait the passed in interval to send API request\n    timeoutID = setTimeout(() => {\n      if(value){\n        switch (name){\n          case 'equipment-search':\n            API.findByEquipment(value)\n            .then(res => {\n              console.log('resInDeBOUNCe, ', res.data)\n              dispatch({type: 'setworkouts', payload: res.data})\n            })\n            .catch(err => console.log(err));\n            break\n          case 'muscle-search':\n            API.findByMuscle(value)\n            .then(res=> {\n              console.log('res.data ', res.data)\n              dispatch({type: 'setworkouts', payload: res.data})\n            })\n            .catch(err => console.log(err));\n            break\n          case 'category-search':\n            API.findByCategory(value)\n            .then(res => {\n              console.log('res.data ', res.data)\n              dispatch({type: 'setworkouts', payload: res.data})\n            })\n            .catch(err => console.log(err));\n            break\n          case 'regex-search':\n              API.regexSearch(value)\n            .then(res => {\n              console.log('res.data ', res.data)\n              dispatch({type: 'setworkouts', payload: res.data})\n            }).catch(err => console.log(err));\n            break\n          default:\n            console.log('HIT DEFAULT');\n        } \n      }\n    }, interval);\n  };\n\n  const clickedWorkout = (wo)=>{\n    if(!state.clickedWorkouts){\n      clickedWorkouts.push(wo);\n    } else {\n      clickedWorkouts = state.clickedWorkouts\n      clickedWorkouts.push(wo);\n    }\n    \n    console.log('clickedWorkouts ', clickedWorkouts);\n    dispatch({type: 'addclickedworkout', payload: clickedWorkouts});\n  }\n\n  const clearClickedWorkouts = (e) =>{\n    e.preventDefault();\n    dispatch({type: 'clearclickedworkouts'});\n  };\n\n  //could make a\n  const makeCustomWorkout = () =>{\n    console.log('coming soon');\n  }\n  const renderWorkouts = () => {\n\n    const workoutStyles = {\n      justifyContent: 'space-evenly',\n    };\n\n    if(state.workoutsToRender){\n      if(!state.clickedWorkouts){\n        return(\n          <div className='row' style={workoutStyles}>\n            {state.workoutsToRender.map((wo,i) => \n              <div key={wo._id}className=\"card border-dark mb-3 col-3 wo-card\" >\n                <div className=\"card-header\" onClick={()=>clickedWorkout(wo)}>{wo.name}</div>\n                <div className=\"card-body text-dark\">\n                  <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">Category: {wo.category}</li>\n                    <li className=\"list-group-item\">Muscles: {wo.muscleGroup}</li>\n                    <li className=\"list-group-item\">Equipment: {wo.equipment}</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n        \n      } else {\n        return(\n          <div className='row' style ={workoutStyles}>\n            <div className='col-9'>\n            {state.workoutsToRender.map((wo,i) => \n                <div key={wo._id}className=\"card border-dark mb-3 wo-card\" >\n                  <div className=\"card-header\" onClick={()=>clickedWorkout(wo)}>{wo.name}</div>\n                  <div className=\"card-body text-dark\">\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">Category: {wo.category}</li>\n                      <li className=\"list-group-item\">Muscles: {wo.muscleGroup}</li>\n                      <li className=\"list-group-item\">Equipment: {wo.equipment}</li>\n                    </ul>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className='col-3 center-things'>\n              <div className ='row'>\n              <h5>Selected Exercises</h5>\n                <div className='col'>\n                  <button className='btn btn-warning' onClick={clearClickedWorkouts}>Clear selections</button>\n                </div>\n                <div className='col'>\n                  <button className='btn btn-success' onClick={makeCustomWorkout}>Add custom workout</button>\n                </div>\n              </div>\n              \n              {state.clickedWorkouts.map((wo,i) => \n                <div key={i}className=\"card border-dark mb-3 wo-card\" >\n                  <div className=\"card-header\">{wo.name}</div>\n                  <div className=\"card-body text-dark\">\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">Category: {wo.category}</li>\n                      <li className=\"list-group-item\">Muscles: {wo.muscleGroup}</li>\n                      <li className=\"list-group-item\">Equipment: {wo.equipment}</li>\n                    </ul>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n        \n      }\n    }\n  };\n\n  const renderPage = () =>{\n    if(!state.currentUser){\n      return(\n        <Redirect to='/'/>\n      );\n    }\n    return(\n      <form>\n          <div className='row'>\n            <div className = 'col'>\n            <DropDown display=\"Filter by equipment\" type=\"primary\" keys={[\"barbell\", \"dumbbell\", \"exercise ball\", \"curl bar\", \"machine\", \"bicycle\"]} name=\"equipment-search\" func={handleChange} />\n            </div>\n            <div className = 'col'>\n            <DropDown display=\"Filter by muscle group\" type=\"primary\" keys={[\"chest\", \"triceps\", \"shoulders\", \"forearms\", \"hamstrings\", \"quadriceps\", \"calves\", \"lats\", \"biceps\", \"middle back\", \"lower back\", \"traps\"]} name=\"muscle-search\" func={handleChange} />\n            </div>\n            <div className = 'col'>\n            <DropDown display=\"Filter by category\" type=\"primary\" keys={[\"strength\", \"cardio\"]} name=\"category-search\" func={handleChange} />\n            </div>\n          </div>\n          <div className = 'row'>\n            <div className = 'col'>\n                <input placeholder='Search' name='regex-search' ref={searchRef} onChange={handleChange}/>\n            </div>\n            <div className = 'col'>\n              <button className='btn btn-info' name='clear-filters' onClick={handleChange}>Clear Filters</button>\n            </div>\n          </div>\n        </form>\n    );\n  };\n\n  return(\n    <div className='wrapper'>\n      {renderPage()}\n      {renderWorkouts()}\n    </div>\n  );\n};\nexport default Search;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StoreProvider } from './utils/GlobalState';\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Calendar from './pages/Calendar';\nimport CreateWorkout from './pages/CreateWorkout';\nimport Search from './pages/Search';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <StoreProvider>\n          <Nav />\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/calendar' component={Calendar} />\n              <Route exact path='/create' component={CreateWorkout} />\n              <Route exact path='/search' component={Search} />\n            </Switch>\n        </StoreProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}